<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates><template autoinsert="true" context="ABAP" deleted="false" description="BPC_AMDP_METHOD_FOR_YTD_MODEL" enabled="true" name="BPC_AMDP_METHOD_FOR_YTD_MODEL">    BY DATABASE FUNCTION FOR HDB&#13;
          LANGUAGE SQLSCRIPT&#13;
          OPTIONS READ-ONLY&#13;
&#13;
          USING ZVBPC_TIME zcl_bpc_derive_adso_filter=&gt;read_req_tsn $$ADSOVIEW UJA_APPL&#13;
          /1CPMB/ZODYMR6&#13;
          .&#13;
&#13;
declare im_fltr_string varchar( 1333 );&#13;
declare lv_adso varchar( 30 );&#13;
DECLARE string_list_version varchar( 1333 );&#13;
DECLARE bup_version varchar( 1333 );&#13;
&#13;
DECLARE EXIT HANDLER FOR SQLEXCEPTION&#13;
BEGIN&#13;
SELECT ::SQL_ERROR_CODE AS "ERROR_CODE", ::SQL_ERROR_MESSAGE AS "ERROR_MESSAGE" FROM SYS.DUMMY;&#13;
END;&#13;
&#13;
SELECT INFOCUBE INTO lv_adso FROM UJA_APPL WHERE APPSET_ID = 'TRACTEBEL_TEMIS' AND APPLICATION_ID = '$$MODEL';&#13;
&#13;
SELECT FILTER INTO im_fltr_string FROM "ZCL_BPC_DERIVE_ADSO_FILTER=&gt;READ_REQ_TSN"( :lv_adso ) ;&#13;
&#13;
if :p_version &lt;&gt; '*'&#13;
then&#13;
cte_splitv=&#13;
SELECT RESULT AS VERSION FROM SYS.SQLSCRIPT_STRING:SPLIT_TO_TABLE( :p_version, ',', -1)&#13;
ORDER BY 1;&#13;
else&#13;
p_version := ''; bup_version := :p_version;&#13;
cte_splitv=&#13;
SELECT DISTINCT "/CPMB/ZODYMR6" AS VERSION&#13;
FROM  "/1CPMB/ZODYMR6"&#13;
WHERE MANDT = session_context('CLIENT');&#13;
select STRING_AGG(VERSION, ',' ORDER BY version) into p_version FROM :cte_splitv;&#13;
end if;&#13;
&#13;
cte_$$MODEL_all=&#13;
SELECT&#13;
"T"."MANDT",&#13;
"F"."REQTSN",&#13;
$$LISTOFFIELDS&#13;
SUBSTRING("F"."/B28/S_ZODI75I",6,2) AS "BASE_PERIOD",&#13;
SUBSTRING("F"."/B28/S_ZODI75I",1,4) AS "TIME_YEAR",&#13;
"T"."NEXT_MON",&#13;
"T"."PREV_MONT",&#13;
"T"."MONTHNUM",&#13;
"T"."PREVMONTHNUM",&#13;
"T"."YEAR_QTR",&#13;
"T"."QTR",&#13;
"T"."NUMDAY",&#13;
"T"."NUMWDAY",&#13;
("F"."/B28/S_SDATA") AS SIGNEDDATA&#13;
FROM "$$ADSOVIEW" AS "F"&#13;
INNER JOIN ZVBPC_TIME AS "T" ON "T"."TIME" = "F"."/B28/S_ZODI75I"&#13;
INNER JOIN :cte_splitv as "V" ON "V"."VERSION" = "F"."/B28/S_ZODYMR6"&#13;
WHERE "T"."MANDT" = SESSION_CONTEXT( 'CDS_CLIENT' )&#13;
AND "F"."/B28/S_ZODI75I" BETWEEN :p_timefrom AND :p_timeto&#13;
;&#13;
if :im_fltr_string &lt;&gt; '' then&#13;
cte_result= APPLY_FILTER( :cte_$$MODEL_all, :im_fltr_string) ;&#13;
else&#13;
cte_result= SELECT * FROM :cte_$$MODEL_all;&#13;
end if&#13;
;&#13;
cte_ytd=&#13;
SELECT&#13;
MANDT&#13;
$$LISTOFDIMENSIONS&#13;
,'YTD' AS MEASURES&#13;
,BASE_PERIOD&#13;
,TIME_YEAR&#13;
,NEXT_MON&#13;
,PREV_MONT&#13;
,MONTHNUM&#13;
,PREVMONTHNUM&#13;
,YEAR_QTR&#13;
,QTR&#13;
,NUMDAY&#13;
,NUMWDAY&#13;
,SUM(SIGNEDDATA) AS SIGNEDDATA&#13;
FROM :cte_result&#13;
GROUP BY&#13;
MANDT&#13;
$$LISTOFDIMENSIONS&#13;
&#13;
,BASE_PERIOD&#13;
,TIME_YEAR&#13;
,NEXT_MON&#13;
,PREV_MONT&#13;
,MONTHNUM&#13;
,PREVMONTHNUM&#13;
,YEAR_QTR&#13;
,QTR&#13;
,NUMDAY&#13;
,NUMWDAY;&#13;
&#13;
cte_periodic_less_jan=&#13;
SELECT&#13;
T1.MANDT&#13;
$$LISTOFDIMENSIONS&#13;
,'PER' AS MEASURES&#13;
,T1.BASE_PERIOD&#13;
,T1.TIME_YEAR&#13;
,T1.NEXT_MON&#13;
,T1.PREV_MONT&#13;
,T1.MONTHNUM&#13;
,T1.PREVMONTHNUM&#13;
,T1.YEAR_QTR&#13;
,T1.QTR&#13;
,T1.NUMDAY&#13;
,T1.NUMWDAY&#13;
,T1.SIGNEDDATA AS AMOUNT_T1&#13;
,TM1.SIGNEDDATA AS AMOUNT_TM1&#13;
,(T1.SIGNEDDATA-TM1.SIGNEDDATA) AS AMOUNT_PERIODIC_T1&#13;
FROM :cte_ytd as T1&#13;
INNER JOIN :cte_ytd as TM1&#13;
ON T1.MANDT = TM1.MANDT&#13;
$$SELFJOINFIELDS&#13;
//REMOVE T1.TIME = TM1.TIME&#13;
&#13;
AND T1.TIME_YEAR = TM1.TIME_YEAR&#13;
WHERE  T1.MONTHNUM = TM1.MONTHNUM + 1&#13;
;&#13;
cte_per_jan_and_after=&#13;
SELECT&#13;
MANDT&#13;
$$LISTOFDIMENSIONS&#13;
,'PER' AS MEASURES&#13;
,BASE_PERIOD&#13;
,TIME_YEAR&#13;
,NEXT_MON&#13;
,PREV_MONT&#13;
,MONTHNUM&#13;
,PREVMONTHNUM&#13;
,YEAR_QTR&#13;
,QTR&#13;
,NUMDAY&#13;
,NUMWDAY&#13;
,AMOUNT_PERIODIC_T1 AS SIGNEDDATA&#13;
FROM :cte_periodic_less_jan&#13;
union&#13;
SELECT&#13;
MANDT&#13;
$$LISTOFDIMENSIONS&#13;
,'PER' AS MEASURES&#13;
,BASE_PERIOD&#13;
,TIME_YEAR&#13;
,NEXT_MON&#13;
,PREV_MONT&#13;
,MONTHNUM&#13;
,PREVMONTHNUM&#13;
,YEAR_QTR&#13;
,QTR&#13;
,NUMDAY&#13;
,NUMWDAY&#13;
,SIGNEDDATA&#13;
FROM :cte_ytd&#13;
WHERE BASE_PERIOD = '01'&#13;
ORDER BY TIME&#13;
;&#13;
cte_per_union_ytd=&#13;
SELECT&#13;
MANDT&#13;
$$LISTOFDIMENSIONS&#13;
,MEASURES&#13;
,BASE_PERIOD&#13;
,TIME_YEAR&#13;
,NEXT_MON&#13;
,PREV_MONT&#13;
,MONTHNUM&#13;
,PREVMONTHNUM&#13;
,YEAR_QTR&#13;
,QTR&#13;
,NUMDAY&#13;
,NUMWDAY&#13;
,SIGNEDDATA&#13;
FROM :cte_per_jan_and_after&#13;
union&#13;
SELECT&#13;
MANDT&#13;
$$LISTOFDIMENSIONS&#13;
,'YTD' AS MEASURES&#13;
,BASE_PERIOD&#13;
,TIME_YEAR&#13;
,NEXT_MON&#13;
,PREV_MONT&#13;
,MONTHNUM&#13;
,PREVMONTHNUM&#13;
,YEAR_QTR&#13;
,QTR&#13;
,NUMDAY&#13;
,NUMWDAY&#13;
,SIGNEDDATA&#13;
FROM :cte_ytd&#13;
ORDER BY TIME&#13;
;&#13;
&#13;
RETURN&#13;
SELECT * FROM :cte_per_union_ytd&#13;
;&#13;
&#13;
ENDMETHOD. "$$MODEL</template></templates>
